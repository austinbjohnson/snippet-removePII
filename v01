{"stepData":{"object-helpers-1":{"name":"object-helpers-1","properties":{"source":{"type":"string","value":"{\n\"notes\": \"This snippet was developed in collaboration with Enrico Simonetti from www.naonis.tech Naonis is available to help you drive value through automation on the Tray.io platform.\",\n\"collaborator_name\": \"Enrico Simonetti\",\n\"collaborator_company\": \"Naonis\",\n\"collaborator_website\": \"www.naonis.tech\"\n}"}},"metadata":{"title":"Demo Data","connector":{"name":"object-helpers","version":"4.1"},"operation":"json_parse","output_schema":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","properties":{"result":{"type":"object","properties":{"notes":{"type":"string"},"collaborator_name":{"type":"string"},"collaborator_company":{"type":"string"},"collaborator_website":{"type":"string"}}}}},"error_handling":{}},"errors":[],"hasAuthenticationError":false},"object-helpers-2":{"name":"object-helpers-2","properties":{"source":{"type":"jsonpath","value":"$.steps.object-helpers-1.result"}},"metadata":{"title":"Stringify JSON for processing","description":"Necessary if you are trying to remove this data from an OBJECT (not essential if you are only passing a string)","connector":{"name":"object-helpers","version":"4.1"},"operation":"json_stringify","output_schema":{},"error_handling":{}},"errors":[],"hasAuthenticationError":false},"aws-1":{"type":"SetStepData","name":"aws-1","metadata":{"title":"Identify PII","description":"Use AWS Comprehend to identify, label, and track the precise location of any PII in the text/json.","connector":{"name":"aws","version":"1.1"},"operation":"raw_aws_request","output_schema":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","properties":{"status_code":{"type":"number"},"headers":{"type":"object","properties":{"x-amzn-requestid":{"type":"string"},"content-type":{"type":"string"},"content-length":{"type":"string"},"date":{"type":"string"},"connection":{"type":"string"}}},"body":{"type":"object","properties":{"Entities":{"type":"array","items":{"type":"object","properties":{"BeginOffset":{"type":"number"},"EndOffset":{"type":"number"},"Score":{"type":"number"},"Type":{"type":"string"}},"required":["BeginOffset","EndOffset","Score","Type"]}}}}}},"error_handling":{},"auth_uuid":null},"properties":{"method":{"type":"string","value":"POST"},"target_url":{"type":"string","value":"https://comprehend.us-west-2.amazonaws.com/"},"service":{"type":"string","value":"comprehend"},"body":{"type":"object","value":{"raw":{"type":"object","value":{"LanguageCode":{"type":"string","value":"en"},"Text":{"type":"jsonpath","value":"$.steps.object-helpers-2.result"}}}}},"region":{"type":"string","value":"us-west-2"},"headers":{"type":"array","value":[{"type":"object","value":{"key":{"type":"string","value":"Content-Type"},"value":{"type":"string","value":"application/x-amz-json-1.1"}}},{"type":"object","value":{"value":{"type":"string","value":"Comprehend_20171127.DetectPiiEntities"},"key":{"type":"string","value":"X-Amz-Target"}}}]}},"errors":[],"hasAuthenticationError":true},"script-4":{"name":"script-4","properties":{"variables":{"type":"array","value":[{"type":"object","value":{"name":{"type":"string","value":"originalText"},"value":{"type":"jsonpath","value":"$.steps.object-helpers-2.result"}}},{"type":"object","value":{"name":{"type":"string","value":"pii"},"value":{"type":"jsonpath","value":"$.steps.aws-1.body"}}}]},"script":{"type":"string","value":"exports.step = function (input, fileInput) {\n    // extract pii entities and original text from input\n    const piiEntities = input.pii?.Entities || [];\n    const text = input.originalText;\n\n    // initialise replaced text with the original text\n    let replacedText = text;\n\n    // store placeholders and their corresponding detected entities\n    let placeholdersMappings = {};\n\n    // store unique placeholders based on entity type and detected entity\n    let entityPlaceholders = {};\n\n    // helper function to generate unique placeholders based on type and detected entity\n    function generatePlaceholder(type, detectedEntity) {\n\n        // initialise placeholders for entity type if not already present\n        entityPlaceholders[type] = entityPlaceholders[type] || {};\n\n        // create or reuse placeholder for detected entity within the given type\n        entityPlaceholders[type][detectedEntity] = entityPlaceholders[type][detectedEntity] || `${type}_${Object.keys(entityPlaceholders[type]).length + 1}`;\n        return `{${entityPlaceholders[type][detectedEntity]}}`;\n    }\n\n    // iterate over pii entities from the end of the string to the beginning\n    for (let i = piiEntities.length - 1; i >= 0; i--) {\n        const entity = piiEntities[i];\n        const detectedEntity = text.substring(entity.BeginOffset, entity.EndOffset);\n        if (detectedEntity) {\n            // store the mapping between the detected entity and its placeholder\n            const placeholder = generatePlaceholder(entity.Type, detectedEntity);\n            placeholdersMappings[placeholder] = detectedEntity;\n\n            // replace the detected entity with a placeholder in the replaced text\n            replacedText = replacedText.substring(0, entity.BeginOffset) +\n                           placeholder +\n                           replacedText.substring(entity.EndOffset);\n        }\n    }\n\n    // prepare and return the output object containing original text, modified text, and placeholders mapping\n    return {\n        originalText: text,\n        modifiedText: replacedText,\n        placeholders: placeholdersMappings\n    };\n};\n"},"file_output":{"type":"boolean","value":false}},"metadata":{"title":"Remove PII From Input","description":"Make sure you update the mapping for the `originalText` input","connector":{"name":"script","version":"3.3"},"operation":"execute","output_schema":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","properties":{"result":{"type":"object","properties":{"originalText":{"type":"string"},"modifiedText":{"type":"string"},"placeholders":{"type":"object","properties":{"{NAME_1}":{"type":"string"},"{NAME_2}":{"type":"string"},"{CREDIT_DEBIT_NUMBER_1}":{"type":"string"},"{DATE_TIME_1}":{"type":"string"},"{BANK_ACCOUNT_NUMBER_1}":{"type":"string"},"{BANK_ROUTING_1}":{"type":"string"},"{ADDRESS_1}":{"type":"string"},"{NAME_3}":{"type":"string"},"{EMAIL_1}":{"type":"string"},"{URL_1}":{"type":"string"}}}}},"console":{"type":"array","items":{}}}},"error_handling":{}},"errors":[],"hasAuthenticationError":false},"boolean-condition-1":{"name":"boolean-condition-1","properties":{"conditions":{"type":"array","value":[{"type":"object","value":{"comparison_type":{"type":"string","value":"==="},"value2":{"type":"string","value":""},"value1":{"type":"string","value":""}}}]},"strictness":{"type":"string","value":"All"}},"metadata":{"title":"Options for Processing","description":"You can run this workflow without sending your data anywhere for testing purposes. The false branch is a real-world example of how you might use this. It runs to the TRUE branch by default.","connector":{"name":"boolean-condition","version":"2.3"},"operation":"boolean_condition","output_schema":{},"error_handling":{}},"errors":[],"hasAuthenticationError":false},"http-client-2":{"name":"http-client-2","properties":{"auth":{"type":"object","value":{"none":{"type":"null","value":null}}},"follow_redirect":{"type":"boolean","value":false},"follow_keep_method":{"type":"boolean","value":false},"reject_unauthorized":{"type":"boolean","value":true},"follow_authorization_header":{"type":"boolean","value":false},"parse_response":{"type":"string","value":"true"},"status_code":{"type":"object","value":{"range":{"type":"object","value":{"from":{"type":"integer","value":200},"to":{"type":"integer","value":299}}}}},"case_sensitive_headers":{"type":"boolean","value":false},"url":{"type":"string","value":"https://postman-echo.com/post"},"body":{"type":"object","value":{"raw":{"type":"jsonpath","value":"$.steps.script-4.result.modifiedText"}}}},"metadata":{"title":"3rd Party API","description":"This is a placeholder example that doesn't actually use the data. This is where you would start USING the data from the script that has obsrtucted the PII identified with the AWS step.","connector":{"name":"http-client","version":"5.6"},"operation":"post_request","output_schema":{},"error_handling":{}},"errors":[],"hasAuthenticationError":false},"script-1":{"name":"script-1","properties":{"variables":{"type":"array","value":[{"type":"object","value":{"name":{"type":"string","value":"text"},"value":{"type":"jsonpath","value":"$.steps.script-4.result.modifiedText"}}},{"type":"object","value":{"name":{"type":"string","value":"placeholders"},"value":{"type":"jsonpath","value":"$.steps.script-4.result.placeholders"}}}]},"script":{"type":"string","value":"exports.step = function (input, fileInput) {\n    const placeholders = input.placeholders;\n    const text = input.text || '';\n    var replacedText = text;\n\n    Object.keys(placeholders).forEach(key => {\n        const value = placeholders[key];\n        replacedText = replacedText.replace(new RegExp(key, 'g'), value);\n    });\n\n    return {\n        'originalText': text,\n        'newText': replacedText\n    };\n};"},"file_output":{"type":"boolean","value":false}},"metadata":{"title":"Reinstate PII Info","description":"OPTIONAL: this is a step that REINSERTS the PII into your data. Not required, but here for convenience.","connector":{"name":"script","version":"3.3"},"operation":"execute","output_schema":{},"error_handling":{}},"errors":[],"hasAuthenticationError":false},"openai-1":{"type":"SetStepData","name":"openai-1","metadata":{"title":"OpenAI Request","description":"This is a placeholder example using OpenAI. This is where you would start USING the data from the script that has obsrtucted the PII identified with the AWS step.","connector":{"name":"openai","version":"1.0"},"operation":"create_chat_completion","output_schema":{},"error_handling":{},"auth_uuid":null},"properties":{"chat_completion_model":{"type":"string","value":"gpt-4"},"max_tokens":{"type":"number","value":820},"messages":{"type":"array","value":[{"type":"object","value":{"role":{"type":"string","value":"system"},"content":{"type":"string","value":"You are an executive assistant working at \"Tray.io\". Your job is to write emails to the a prospective partner asking for help advancing your automation practice using Tray.io's Universal Automation Cloud. The email should be professional, brief, and friendly in tone. For any placeholders you should use the same format as you receive e.g., {NAME_1} should be used as the placeholder for that information in your email draft."}}},{"type":"object","value":{"role":{"type":"string","value":"user"},"content":{"type":"string","value":"Write an email draft to the following prospective partner:\n\n{$.steps.script-4.result.modifiedText}"}}}]},"temperature":{"value":0.2,"type":"number"}},"errors":[],"hasAuthenticationError":true},"script-5":{"name":"script-5","properties":{"variables":{"type":"array","value":[{"type":"object","value":{"name":{"type":"string","value":"text"},"value":{"type":"jsonpath","value":"$.steps.openai-1.choices[0].message.content"}}},{"type":"object","value":{"name":{"type":"string","value":"placeholders"},"value":{"type":"jsonpath","value":"$.steps.script-4.result.placeholders"}}}]},"script":{"type":"string","value":"exports.step = function (input, fileInput) {\n    const placeholders = input.placeholders;\n    const text = input.text || '';\n    var replacedText = text;\n\n    Object.keys(placeholders).forEach(key => {\n        const value = placeholders[key];\n        replacedText = replacedText.replace(new RegExp(key, 'g'), value);\n    });\n\n    return {\n        'originalText': text,\n        'newText': replacedText\n    };\n};"},"file_output":{"type":"boolean","value":false}},"metadata":{"title":"Reinstate PII Info","description":"OPTIONAL: this is a step that REINSERTS the PII into your data. Not required, but here for convenience.","connector":{"name":"script","version":"3.3"},"operation":"execute","output_schema":{},"error_handling":{}},"errors":[],"hasAuthenticationError":false}},"structure":[{"name":"object-helpers-1","type":"normal","content":{}},{"name":"object-helpers-2","type":"normal","content":{}},{"name":"aws-1","type":"normal","content":{}},{"name":"script-4","type":"normal","content":{}},{"name":"boolean-condition-1","type":"branch","content":{"true":[{"name":"http-client-2","type":"normal","content":{}},{"name":"script-1","type":"normal","content":{}}],"false":[{"name":"openai-1","type":"normal","content":{}},{"name":"script-5","type":"normal","content":{}}]}}],"version":"1.0.0"}
